[{"E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-admin\\src\\index.js":"1","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-admin\\src\\Components\\Dashboard\\Dashboard.js":"2","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-admin\\src\\Components\\Dashboard\\listItems.js":"3","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-admin\\src\\Components\\Dashboard\\Deposits.js":"4","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-admin\\src\\Components\\Dashboard\\Chart.js":"5","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-admin\\src\\Components\\Dashboard\\Orders.js":"6","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-admin\\src\\Components\\Dashboard\\Title.js":"7","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-admin\\src\\App.js":"8","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-admin\\src\\Components\\Admin\\login.js":"9","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-admin\\src\\Components\\Admin\\register.js":"10","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-admin\\src\\Components\\Admin\\Service\\authService.js":"11","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-admin\\src\\Util\\callAPI.js":"12"},{"size":469,"mtime":1607441312873,"results":"13","hashOfConfig":"14"},{"size":7136,"mtime":1607437302747,"results":"15","hashOfConfig":"14"},{"size":2323,"mtime":1607437165748,"results":"16","hashOfConfig":"14"},{"size":988,"mtime":1607437109099,"results":"17","hashOfConfig":"14"},{"size":1767,"mtime":1607437025103,"results":"18","hashOfConfig":"14"},{"size":2735,"mtime":1607437141320,"results":"19","hashOfConfig":"14"},{"size":376,"mtime":1607436930501,"results":"20","hashOfConfig":"14"},{"size":744,"mtime":1607441194425,"results":"21","hashOfConfig":"14"},{"size":5632,"mtime":1607441309357,"results":"22","hashOfConfig":"14"},{"size":11532,"mtime":1607440170449,"results":"23","hashOfConfig":"14"},{"size":957,"mtime":1607441195595,"results":"24","hashOfConfig":"14"},{"size":413,"mtime":1607440521016,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"p39j9d",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-admin\\src\\index.js",[],["52","53"],"E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-admin\\src\\Components\\Dashboard\\Dashboard.js",[],"E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-admin\\src\\Components\\Dashboard\\listItems.js",[],"E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-admin\\src\\Components\\Dashboard\\Deposits.js",[],"E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-admin\\src\\Components\\Dashboard\\Chart.js",[],"E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-admin\\src\\Components\\Dashboard\\Orders.js",[],"E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-admin\\src\\Components\\Dashboard\\Title.js",[],"E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-admin\\src\\App.js",[],"E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-admin\\src\\Components\\Admin\\login.js",[],"E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-admin\\src\\Components\\Admin\\register.js",["54"],"import React, {useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {Redirect, Link} from \"react-router-dom\";\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport {signUpService} from \"./Service/authService\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(1),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(1, 0, 2),\r\n        color: \"#fff\"\r\n    },\r\n    input: {\r\n        fontSize: \"15px\"\r\n    },\r\n    labelInput:{\r\n        fontSize: \"15px\"\r\n    }\r\n}));\r\n\r\n\r\nexport default function Register() {\r\n    const [information, setInformation] = useState({\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            username: \"\",\r\n            password: \"\",\r\n            rePassword: \"\",\r\n        }\r\n    )\r\n    const [status, setStatus] = useState({type: \"error\", content: \"\"});\r\n    const [alert, setAlert] = useState(false);\r\n    const [isSignUpSuccess, setIsSignUpSuccess] = useState(false);\r\n    const classes = useStyles();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if(information.email.length === 0 || information.lastName.length === 0 || information.firstName.length === 0 ||\r\n            information.password.length === 0 || information.rePassword.length === 0)\r\n        {\r\n            setStatus({type: \"error\", content: \"Please fill all fields\"})\r\n            setAlert(true);\r\n        }else if(information.password !== information.rePassword)\r\n        {\r\n            setStatus({type: \"error\", content: \"Password not match\"})\r\n            setAlert(true);\r\n        }\r\n        else if(information.password.length < 6)\r\n        {\r\n            setStatus({type: \"error\", content: \"Password at least 6 characters\"})\r\n            setAlert(true);\r\n        }\r\n        else {\r\n            const res = await signUpService(information.username, information.firstName,information.lastName,\r\n                information.password, information.email)\r\n            if(res.data.err)\r\n            {\r\n                setStatus({type: \"error\", content: res.data.err});\r\n                setAlert(true);\r\n            }else if (res.data.msg)\r\n            {\r\n                setStatus({type: \"success\", content: res.data.msg});\r\n                setAlert(true);\r\n                //direct\r\n                //setIsSignUpSuccess(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    if(isSignUpSuccess) return (<Redirect to=\"/login\"/>)\r\n\r\n    return (\r\n        <div>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Register\r\n                    </Typography>\r\n                    <Collapse in={alert}>\r\n                        <Alert severity={status.type}\r\n                               action={\r\n                                   <IconButton\r\n                                       aria-label=\"close\"\r\n                                       color=\"inherit\"\r\n                                       size=\"small\"\r\n                                       onClick={() => {\r\n                                           setAlert(false);\r\n                                       }}\r\n                                   >\r\n                                       <CloseIcon fontSize=\"inherit\" />\r\n                                   </IconButton>\r\n                               }\r\n                        >\r\n                            {status.content}\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    autoComplete=\"fname\"\r\n                                    name=\"firstName\"\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"firstName\"\r\n                                    label=\"First Name\"\r\n                                    autoFocus\r\n                                    InputProps={{\r\n                                        className: classes.input\r\n                                    }}\r\n                                    InputLabelProps={{\r\n                                        className: classes.labelInput\r\n                                    }}\r\n                                    onChange = {(e) => setInformation({...information, firstName: e.target.value})}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"lastName\"\r\n                                    label=\"Last Name\"\r\n                                    name=\"lastName\"\r\n                                    autoComplete=\"lname\"\r\n                                    InputProps={{\r\n                                        className: classes.input\r\n                                    }}\r\n                                    InputLabelProps={{\r\n                                        className: classes.labelInput\r\n                                    }}\r\n                                    onChange = {(e) => setInformation({...information, lastName: e.target.value})}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"username\"\r\n                                    label=\"Username\"\r\n                                    name=\"username\"\r\n                                    InputProps={{\r\n                                        className: classes.input\r\n                                    }}\r\n                                    InputLabelProps={{\r\n                                        className: classes.labelInput\r\n                                    }}\r\n                                    onChange = {(e) => setInformation({...information, username: e.target.value})}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    InputProps={{\r\n                                        className: classes.input\r\n                                    }}\r\n                                    InputLabelProps={{\r\n                                        className: classes.labelInput\r\n                                    }}\r\n                                    onChange = {(e) => setInformation({...information, email: e.target.value})}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    InputProps={{\r\n                                        className: classes.input\r\n                                    }}\r\n                                    InputLabelProps={{\r\n                                        className: classes.labelInput\r\n                                    }}\r\n                                    onChange = {(e) => setInformation({...information, password: e.target.value})}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"re-password\"\r\n                                    label=\"Re-Password\"\r\n                                    type=\"password\"\r\n                                    id=\"re-password\"\r\n                                    InputProps={{\r\n                                        className: classes.input\r\n                                    }}\r\n                                    InputLabelProps={{\r\n                                        className: classes.labelInput\r\n                                    }}\r\n                                    onChange = {(e) => setInformation({...information, rePassword: e.target.value})}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Sign Up\r\n                        </Button>\r\n                        <Grid container justify=\"flex-end\">\r\n                            <Grid item>\r\n                                <Link to='/login' variant=\"body2\">\r\n                                    Already have an account? Login\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n\r\n    );\r\n}","E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-admin\\src\\Components\\Admin\\Service\\authService.js",[],"E:\\HCMUS_Document\\Studying\\Nam4\\HK1\\PTUDWNC\\CuoiKi\\caro-admin\\src\\Util\\callAPI.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":58,"column":29,"nodeType":"61","messageId":"62","endLine":58,"endColumn":47},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'setIsSignUpSuccess' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]